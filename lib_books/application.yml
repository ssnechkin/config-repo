server:
  port: 8080
  
spring:
  application:
  	name: lib_books
  datasource:
    url: jdbc:postgresql://${DB_URL:localhost:5432}/${DB_NAME:otusnss}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
  sql:
    init:
      mode: always
  main:
    allow-circular-references: true
  jpa:
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        default_schema: public
    generate-ddl: true
    hibernate:
      ddl-auto: create
      show-sql: true
      
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  info:
    # Включает информацию о сборке (spring-boot-maven-plugin)
    build:
      enabled: true
    # Включает информацию о приложении из application.yml
    env:
      enabled: true
    # Включает информацию о git (git-commit-id-plugin)
    git:
      mode: "full"

eurika:
  client:
    service-url:
      # Адрес сервера регистрации
      defaultZone: http://localhost:8001/eurika_srv
  # Нужна ли регистрация в эврике
  register-with-eureka: true
  # Нужен ли кэш
  fetch-registry: true
  server:
    # Время для актуализации
    eviction-interval-timer-in-ms: 15000
  instanse:
    # Время ожидания после запроса синхронизации
    leaseRenewalIntervalInSeconds: 30
    # Время между запросами синхронизации
    leaseExpirationOurationInSeconds: 30
    # Определение инстансов (запущенных экземпляров текущего клиента)
    instanse-id: ${spring.application.name}:${server.port}
    # Префелирование ip адрес
    prefer-ip-address: true

use:
  fign:
    client: true

logging:
  level:
    ROOT: INFO
  file:
    name: book_lib.log
